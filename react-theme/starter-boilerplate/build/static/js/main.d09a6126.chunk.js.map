{"version":3,"sources":["history.js","auth/FetchInterceptor.js","components/shared-components/Flex/index.js","redux/constants/Auth.js","configs/AppConfig.js","configs/EnvironmentConfig.js","constants/ThemeConstant.js","redux/reducers/Auth.js","redux/constants/Theme.js","redux/reducers/Theme.js","redux/reducers/index.js","configs/FirebaseConfig.js","auth/FirebaseAuth.js","services/FirebaseService.js","redux/sagas/Auth.js","redux/sagas/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","utils/index.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/shared-components/Loading/index.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/shared-components/ColorPicker/index.js","components/layout-components/NavLanguage.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/index.js","lang/entries/ja_JP.js","views/index.js","App.js","serviceWorker.js","index.js","services/ExampleService.js","views/app-views/test1/index.js","redux/actions/Auth.js"],"names":["history","service","axios","create","baseURL","API_BASE_URL","timeout","ENTRY_ROUTE","interceptors","request","use","config","jwtToken","localStorage","getItem","AUTH_TOKEN","headers","push","window","location","reload","error","notification","message","Promise","reject","response","data","notificationParam","status","description","removeItem","Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","defaultProps","SIGNIN","AUTHENTICATED","SIGNOUT","SIGNOUT_SUCCESS","SIGNUP","SIGNUP_SUCCESS","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SHOW_LOADING","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","APP_NAME","API_ENDPOINT_URL","APP_PREFIX_PATH","AUTH_PREFIX_PATH","THEME_CONFIG","navCollapsed","sideNavTheme","SIDE_NAV_LIGHT","locale","navType","NAV_TYPE_SIDE","topNavColor","headerNavColor","mobileNav","currentTheme","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_DARK","NAV_TYPE_TOP","initState","loading","showMessage","redirect","token","auth","state","action","type","TOGGLE_COLLAPSED_NAV","CHANGE_LOCALE","SIDE_NAV_STYLE_CHANGE","NAV_TYPE_CHANGE","TOP_NAV_COLOR_CHANGE","HEADER_NAV_COLOR_CHANGE","TOGGLE_MOBILE_NAV","SWITCH_THEME","initTheme","theme","reducers","combineReducers","Theme","Auth","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firebaseConfig","firestore","googleAuthProvider","currentUser","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","FirebaseService","TwitterAuthProvider","GithubAuthProvider","signInEmailRequest","email","password","a","signInWithEmailAndPassword","then","user","catch","err","signOutRequest","signOut","signInGoogleRequest","signInWithPopup","signInFacebookRequest","signUpEmailRequest","createUserWithEmailAndPassword","signInWithFBEmail","signUpWithFBEmail","signInWithFBGoogle","signInWithFacebook","rootSaga","takeEvery","payload","call","put","showAuthMessage","setItem","uid","authenticated","undefined","signOutUser","signOutSuccess","signUpSuccess","signInWithGoogleAuthenticated","signInWithFacebookAuthenticated","all","fork","getState","sagaMiddleware","createSagaMiddleware","middlewares","store","preloadedState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","injectIntl","withRef","Icon","this","React","createElement","Component","dashBoardNavTree","key","path","title","icon","DashboardOutlined","breadcrumb","submenu","navigationConfig","Utils","name","initials","match","shift","pop","toUpperCase","navTree","route","p","hasOwnProperty","getRouteInfo","hex","cutHex","h","charAt","substring","parseInt","hexToG","hexToB","color","percent","R","G","B","RR","toString","length","GG","BB","rgba","trim","str","replace","inParts","indexOf","split","r","g","b","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","number","positive","negative","toLowerCase","list","value","filter","item","input","searchText","screens","breakpoints","toggleCollapsedNav","onMobileNavToggle","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","id","setDefaultOpen","keyList","keyString","arr","index","elm","SideNavContent","routeInfo","hideGroupTitle","localization","isMobile","utils","getBreakPoint","includes","closeMobileNav","mode","style","height","borderRight","defaultSelectedKeys","defaultOpenKeys","map","menu","ItemGroup","subMenuFirst","subMenuSecond","Item","onClick","to","TopNavContent","backgroundColor","popupClassName","connect","Sider","Layout","width","collapsed","autoHide","getColorContrast","LoadingOutlined","fontSize","spin","Loading","align","cover","indicator","getLogoWidthGutter","isNavTop","mobileLogo","getLogo","logoType","getLogoDisplay","src","alt","onClose","placement","closable","visible","bodyStyle","padding","ArrowLeftOutlined","ColorPicker","colorChange","useState","setVisible","pickerColor","setPickerColor","boxColor","setBoxColor","useEffect","onPickerDropdown","onChange","rgb","SelectedLanguage","language","lang","langId","getLanguageDetail","langName","maxWidth","DownOutlined","onLocaleChange","configDisplay","languageOption","CheckOutlined","overlay","trigger","href","e","preventDefault","GlobalOutlined","colorOptions","ListOption","selector","disabled","vertical","mapDispatchToProps","onNavTypeChange","onNavStyleChange","onTopNavColorChange","onHeaderNavColorChange","onSwitchTheme","configState","isCollapse","useThemeSwitcher","switcher","themes","rgbaToHex","Group","size","target","Button","checked","isChecked","changedTheme","text","JSON","stringify","onCopy","success","CopyOutlined","block","NavPanel","showDrawer","setState","SettingOutlined","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","category","AppstoreOutlined","AntDesignOutlined","FileTextOutlined","SearchInput","active","close","setValue","options","setOptions","inputRef","useRef","current","focus","ref","dropdownClassName","onSelect","onSearch","label","filterOption","inputValue","option","placeholder","prefix","SearchOutlined","CloseOutlined","Header","searchActive","setSearchActive","onSearchClose","navMode","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","pathSnippets","pathname","buildBreadcrumb","_","url","slice","AppBreadcrumb","PageHeader","display","Footer","Date","getFullYear","Test1Component","lazy","Test2Component","AppViews","fallback","component","render","from","memo","Content","AppLayout","currentRouteInfo","isNavSide","paddingLeft","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","AppLocale","en","enLang","zh","zhLang","fr","frLang","ja","antdJaJP","jaMsg","currentAppLocale","exact","dark","process","light","App","themeMap","defaultTheme","insertionPoint","Views","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","exampleService","params","fetch","method","test1","fetchData","body","userId","resp","console","log","hideAuthMessage","showLoading"],"mappings":"gIAEeA,E,OAAAA,I,iBCITC,EAAUC,IAAMC,OAAO,CAC3BC,QAASC,IACTC,QAAS,MAILC,EAAc,cAKpBN,EAAQO,aAAaC,QAAQC,KAAI,SAAAC,GAChC,IAAMC,EAAWC,aAAaC,QAAQC,KAWrC,OATIH,IACFD,EAAOK,QAAP,cAAoCJ,GAGjCA,GAAaD,EAAOK,QAVA,oBAWzBhB,EAAQiB,KAAKV,GACbW,OAAOC,SAASC,UAGTT,KACN,SAAAU,GAEFC,IAAaD,MAAM,CAClBE,QAAS,UAETC,QAAQC,OAAOJ,MAIjBpB,EAAQO,aAAakB,SAAShB,KAAK,SAACgB,GACnC,OAAOA,EAASC,QACd,SAACN,GAEH,IAAIO,EAAoB,CACvBL,QAAS,IA0BV,OAtB8B,MAA1BF,EAAMK,SAASG,QAA4C,MAA1BR,EAAMK,SAASG,SACnDD,EAAkBL,QAAU,sBAC5BK,EAAkBE,YAAc,qBAChCjB,aAAakB,WAAWhB,KACxBf,EAAQiB,KAAKV,GACbW,OAAOC,SAASC,UAGa,MAA1BC,EAAMK,SAASG,SAClBD,EAAkBL,QAAU,aAGC,MAA1BF,EAAMK,SAASG,SAClBD,EAAkBL,QAAU,yBAGC,MAA1BF,EAAMK,SAASG,SAClBD,EAAkBL,QAAU,YAG7BD,IAAaD,MAAMO,GAEZJ,QAAQC,OAAOJ,MAGRpB,O,4CCtET+B,G,KAAO,SAAAC,GAAU,IACdC,EAA+ED,EAA/EC,SAAUC,EAAqEF,EAArEE,UAAWC,EAA0DH,EAA1DG,WAAYC,EAA8CJ,EAA9CI,eAAgBC,EAA8BL,EAA9BK,WAAYC,EAAkBN,EAAlBM,cAErE,OACC,qBAAKJ,UAAS,UAFiBG,EAAa,SAAW,YAEzC,YAA4BH,EAA5B,YAAyCI,EAAe,QAAUA,EAAgB,GAAlF,YAAwFH,EAAY,eAAiBA,EAAY,GAAjI,YAAuIC,EAAgB,mBAAqBA,EAAgB,IAA1M,SACEH,MAaJF,EAAKQ,aAAe,CACnBF,YAAY,EACZC,cAAe,MACfJ,UAAW,IAIGH,O,4kuBC5Bf,4dAAO,IAAMS,EAAS,SACTC,EAAgB,gBAChBC,EAAU,UACVC,EAAkB,kBAClBC,EAAS,SACTC,EAAiB,iBACjBC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAe,eACflC,EAAa,aACbmC,EAAqB,qBACrBC,EAAmC,mCACnCC,EAAuB,uBACvBC,EAAqC,sC,sNCVrCC,EAAW,SACXjD,ECAA,CACXkD,iBAAkB,wBDDYA,iBACnBC,EAAkB,OAClBC,EAAmB,QAEnBC,EAAe,CAC3BC,cAAc,EACdC,aAAcC,IACdC,OAAQ,KACRC,QAASC,IACTC,YAAa,UACbC,eAAgB,GAChBC,WAAW,EACXC,aAAc,U,gCEhBf,4MAAO,IACMC,EAAiB,IACjBC,EAA2B,GAC3BT,EAAiB,iBACjBU,EAAgB,gBAChBP,EAAgB,OAChBQ,EAAe,O,0ICMtBC,EAAY,CAChBC,SAAS,EACTnD,QAAS,GACToD,aAAa,EACbC,SAAU,GACVC,MAAOhE,aAAaC,QAAQC,MAiEf+D,EA9DF,WAAgC,IAA/BC,EAA8B,uDAAtBN,EAAWO,EAAW,uCAC3C,OAAQA,EAAOC,MACd,KAAKvC,IACJ,OAAO,2BACHqC,GADJ,IAECL,SAAS,EACTE,SAAU,IACVC,MAAOG,EAAOH,QAEhB,KAAK9B,IACJ,OAAO,2BACHgC,GADJ,IAECxD,QAASyD,EAAOzD,QAChBoD,aAAa,EACbD,SAAS,IAEX,KAAK1B,IACJ,OAAO,2BACH+B,GADJ,IAECxD,QAAS,GACToD,aAAa,IAEf,KAAK/B,IACJ,OAAO,2BACHmC,GADJ,IAECF,MAAO,KACPD,SAAU,IACVF,SAAS,IAGX,KAAK5B,IACJ,OAAO,2BACFiC,GADL,IAEEL,SAAS,EACTG,MAAOG,EAAOH,QAGjB,KAAK5B,IACJ,OAAO,2BACH8B,GADJ,IAECL,SAAS,IAGX,KAAKvB,IAOL,KAAKE,IACJ,OAAO,2BACH0B,GADJ,IAECL,SAAS,EACTG,MAAOG,EAAOH,QAGhB,QACC,OAAOE,IC9EGG,EAAuB,uBACvBC,EAAgB,gBAChBC,EAAwB,wBACxBC,EAAkB,kBAClBC,EAAuB,uBACvBC,EAA0B,0BAC1BC,EAAoB,oBACpBC,EAAe,e,QCKtBC,EAAS,eACVhC,KAkDUiC,EA/CD,WAAgC,IAA/BZ,EAA8B,uDAAtBW,EAAWV,EAAW,uCAC3C,OAAQA,EAAOC,MACb,KAAKC,EACH,OAAO,2BACFH,GADL,IAEEpB,aAAcqB,EAAOrB,eAEzB,KAAKyB,EACH,OAAO,2BACFL,GADL,IAEEnB,aAAcoB,EAAOpB,eAEzB,KAAKuB,EACH,OAAO,2BACFJ,GADL,IAEEjB,OAAQkB,EAAOlB,SAEnB,KAAKuB,EACH,OAAO,2BACFN,GADL,IAEEhB,QAASiB,EAAOjB,UAEpB,KAAKuB,EACH,OAAO,2BACFP,GADL,IAEEd,YAAae,EAAOf,cAExB,KAAKsB,EACH,OAAO,2BACFR,GADL,IAEEb,eAAgBc,EAAOd,iBAE3B,KAAKsB,EACH,OAAO,2BACFT,GADL,IAEEZ,UAAWa,EAAOb,YAEtB,KAAKsB,EACH,OAAO,2BACFV,GADL,IAEEX,aAAcY,EAAOZ,eAEzB,QACE,OAAOW,IClDEa,EALEC,YAAgB,CAC7BF,MAAOG,EACPhB,KAAMiB,I,0DCKKC,G,cAXQ,CACrBC,OAAQ,0CACRC,WAAY,yBACZC,YAAa,gCACbC,UAAW,SACXC,cAAe,qBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBCHjBC,IAASC,cAAcC,GAGZF,IAASG,YAApB,IACM9B,EAAO2B,IAAS3B,OAEhB+B,GADc/B,EAAKgC,YACE,IAAIL,IAAS3B,KAAKiC,oBACvCC,EAAuB,IAAIP,IAAS3B,KAAKmC,qBCVzCC,GDWsB,IAAIT,IAAS3B,KAAKqC,oBACnB,IAAIV,IAAS3B,KAAKsC,mBCZrB,IAExBF,EAAgBG,mBAAhB,uCAAqC,WAAOC,EAAOC,GAAd,SAAAC,EAAA,sEAC9B1C,EAAK2C,2BAA2BH,EAAOC,GAAUG,MAAK,SAAAC,GAAI,OAAIA,KAAMC,OAAM,SAAAC,GAAG,OAAIA,KADnD,mFAArC,wDAGAX,EAAgBG,mBAAhB,uCAAqC,WAAOC,EAAOC,GAAd,SAAAC,EAAA,sEAC7B1C,EAAK2C,2BAA2BH,EAAOC,GAAUG,MAAK,SAAAC,GAAI,OAAIA,KAAMC,OAAM,SAAAC,GAAG,OAAIA,KADpD,mFAArC,wDAGAX,EAAgBY,eAAhB,sBAAiC,sBAAAN,EAAA,sEAC1B1C,EAAKiD,UAAUL,MAAK,SAAAC,GAAI,OAAIA,KAAMC,OAAM,SAAAC,GAAG,OAAIA,KADrB,mFAGjCX,EAAgBc,oBAAhB,sBAAsC,sBAAAR,EAAA,sEAC9B1C,EAAKmD,gBAAgBpB,GAAoBa,MAAK,SAAAC,GAAI,OAAIA,KAAMC,OAAM,SAAAC,GAAG,OAAIA,KAD3C,mFAGtCX,EAAgBgB,sBAAhB,sBAAwC,sBAAAV,EAAA,sEAChC1C,EAAKmD,gBAAgBjB,GAAsBU,MAAK,SAAAC,GAAI,OAAIA,KAAMC,OAAM,SAAAC,GAAG,OAAIA,KAD3C,mFAGxCX,EAAgBiB,mBAAhB,uCAAqC,WAAOb,EAAOC,GAAd,SAAAC,EAAA,sEAC9B1C,EAAKsD,+BAA+Bd,EAAOC,GAAUG,MAAK,SAAAC,GAAI,OAAIA,KAAMC,OAAM,SAAAC,GAAG,OAAIA,KADvD,mFAArC,wDAGeX,Q,WCFEmB,G,WAiBAN,G,WAgBAO,G,WAkBAC,G,WAgBAC,G,WAgBQC,GAnFlB,SAAUJ,IAAV,iEACL,OADK,SACCK,YAAUjG,IAAD,UAAS,2FAGV,OAHsBkG,EAAZ,EAAYA,QAC7BrB,EAAmBqB,EAAnBrB,MAAOC,EAAYoB,EAAZpB,SADU,kBAGJqB,YAAK1B,EAAgBG,mBAAoBC,EAAOC,GAH5C,YAGjBI,EAHiB,QAIdpG,QAJc,iBAKtB,OALsB,SAKhBsH,YAAIC,YAAgBnB,EAAKpG,UALT,+BAQtB,OADAV,aAAakI,QAAQhI,IAAY4G,EAAKA,KAAKqB,KAPrB,UAQhBH,YAAII,YAActB,EAAKA,KAAKqB,MARZ,gCAWvB,OAXuB,oCAWjBH,YAAIC,YAAgB,EAAD,KAXF,0DADnB,uCAiBA,SAAUf,IAAV,iEACL,OADK,SACCW,YAAU/F,IAAD,UAAU,oFAEJ,OAFI,kBAEEiG,YAAK1B,EAAgBY,gBAFvB,eAGJoB,KADdC,EAFkB,yBAKvB,OADAtI,aAAakB,WAAWhB,KAJD,SAKjB8H,YAAIO,YAAeD,IALF,+BAOvB,OAPuB,UAOjBN,YAAIC,YAAgBK,EAAY5H,UAPf,gCAUxB,OAVwB,oCAUlBsH,YAAIC,YAAgB,EAAD,KAVD,0DADpB,uCAgBA,SAAUR,IAAV,iEACL,OADK,SACCI,YAAU7F,IAAD,UAAS,2FAGV,OAHsB8F,EAAZ,EAAYA,QAC7BrB,EAAmBqB,EAAnBrB,MAAOC,EAAYoB,EAAZpB,SADU,kBAGJqB,YAAK1B,EAAgBiB,mBAAoBb,EAAOC,GAH5C,YAGjBI,EAHiB,QAIdpG,QAJc,iBAKtB,OALsB,SAKhBsH,YAAIC,YAAgBnB,EAAKpG,UALT,+BAQtB,OADAV,aAAakI,QAAQhI,IAAY4G,EAAKA,KAAKqB,KAPrB,UAQhBH,YAAIQ,YAAc1B,EAAKA,KAAKqB,MARZ,gCAWvB,OAXuB,oCAWjBH,YAAIC,YAAgB,EAAD,KAXF,0DADnB,uCAkBA,SAAUP,IAAV,iEACL,OADK,SACCG,YAAUxF,IAAD,UAAqB,oFAEtB,OAFsB,kBAEhB0F,YAAK1B,EAAgBc,qBAFL,YAE7BL,EAF6B,QAG1BpG,QAH0B,gBAIlC,OAJkC,SAI5BsH,YAAIC,YAAgBnB,EAAKpG,UAJG,8BAOlC,OADAV,aAAakI,QAAQhI,IAAY4G,EAAKA,KAAKqB,KANT,UAO5BH,YAAIS,YAA8B3B,EAAKA,KAAKqB,MAPhB,gCAUnC,OAVmC,oCAU7BH,YAAIC,YAAgB,EAAD,KAVU,0DAD/B,uCAgBA,SAAUN,IAAV,iEACL,OADK,SACCE,YAAUtF,IAAD,UAAuB,oFAExB,OAFwB,kBAElBwF,YAAK1B,EAAgBgB,uBAFH,YAE/BP,EAF+B,QAG5BpG,QAH4B,gBAIpC,OAJoC,SAI9BsH,YAAIC,YAAgBnB,EAAKpG,UAJK,8BAOpC,OADAV,aAAakI,QAAQhI,IAAY4G,EAAKA,KAAKqB,KANP,UAO9BH,YAAIU,YAAgC5B,EAAKA,KAAKqB,MAPhB,gCAUrC,OAVqC,oCAU/BH,YAAIC,YAAgB,EAAD,KAVY,0DADjC,uCAgBQ,SAAUL,IAAV,iEACb,OADa,SACPe,YAAI,CACVC,YAAKpB,GACLoB,YAAK1B,GACL0B,YAAKnB,GACLmB,YAAKlB,GACLkB,YAAKjB,KANQ,uC,eCpGUC,GAAV,SAAUA,EAASiB,GAAnB,iEACb,OADa,SACPF,YAAI,CACRzD,MAFW,uCCEf,IAAM4D,EAAiBC,cAEjBC,GAAc,CAACF,GAqBrB,IAEeG,GArBf,SAAwBC,GAEtB,IAAMC,EAAmB9I,OAAO+I,sCAAwCC,IAClEJ,EAAQK,YAAYvE,EAAUmE,EAAgBC,EAClDI,IAAe,WAAf,EAAmBP,MAYrB,OATAF,EAAeU,IAAI5B,GASZqB,EAGKQ,G,uFCxBCC,iBADK,SAAAtI,GAAK,OAAI,cAAC,KAAD,eAAsBA,MACZ,CACrCuI,SAAS,I,sCCMIC,GATf,2KACW,IAAD,EACqBC,KAAKzI,MAA1BgD,EADA,EACAA,KAAM9C,EADN,EACMA,UACd,OACC,mCAAGwI,IAAMC,cAAc3F,EAAM,CAAE9C,UAAWA,UAJ7C,GAA0B0I,a,UCGpBC,GAAmB,CAAC,CACxBC,IAAK,OACLC,KAAK,GAAD,OAAKxH,IAAL,SACJyH,MAAO,OACPC,KAAMC,KACNC,YAAY,EACZC,QAAS,IACT,CACAN,IAAK,WACLC,KAAK,GAAD,OAAKxH,IAAL,aACJyH,MAAO,WACPC,KAAMC,KACNC,YAAY,EACZC,QAAS,IACT,CACAN,IAAK,QACLC,KAAK,GAAD,OAAKxH,IAAL,UACJyH,MAAO,QACPC,KAAMC,KACNC,YAAY,EACZC,QAAS,IACT,CACAN,IAAK,QACLC,KAAK,GAAD,OAAKxH,IAAL,UACJyH,MAAO,QACPC,KAAMC,KACNC,YAAY,EACZC,QAAS,KAQIC,GAJO,UACjBR,ICkLUS,G,8GAhNQC,GACrB,IAAIC,EAAWD,EAAKE,MAAM,UAAY,GACtC,QAASD,EAASE,SAAW,KAAOF,EAASG,OAAS,KAAKC,gB,mCASxCC,EAASd,GAC5B,GAAIc,EAAQd,OAASA,EACnB,OAAOc,EAET,IAAIC,EACJ,IAAK,IAAIC,KAAKF,EACZ,GAAIA,EAAQG,eAAeD,IAA4B,kBAAfF,EAAQE,KAChDD,EAAQrB,KAAKwB,aAAaJ,EAAQE,GAAIhB,IAErC,OAAOe,EAIV,OAAOA,I,uCAQgBI,GACvB,IAAIA,EACH,MAAO,OASR,SAASC,EAAOC,GAAI,MAAwB,MAAhBA,EAAEC,OAAO,GAAcD,EAAEE,UAAU,EAAE,GAAGF,EAEpE,OAD6B,IAJFG,SAAUJ,EAHjBD,GAG4BI,UAAU,EAAE,GAAG,IAIjB,IAH9C,SAAgBF,GAAI,OAAOG,SAAUJ,EAAOC,GAAIE,UAAU,EAAE,GAAG,IAHhDE,CAAON,GAMwC,IAF9D,SAAgBE,GAAI,OAAOG,SAAUJ,EAAOC,GAAIE,UAAU,EAAE,GAAG,IAHjDG,CAAOP,IAKiD,IARpD,IAUV,OAEA,U,iCAUSQ,EAAOC,GACxB,IAAIC,EAAIL,SAASG,EAAMJ,UAAU,EAAE,GAAG,IAClCO,EAAIN,SAASG,EAAMJ,UAAU,EAAE,GAAG,IAClCQ,EAAIP,SAASG,EAAMJ,UAAU,EAAE,GAAG,IACtCM,EAAIL,SAASK,GAAK,IAAMD,GAAW,KAInCE,GAHAA,EAAIN,SAASM,GAAK,IAAMF,GAAW,MAG5B,IAAKE,EAAE,IACdC,GAHAA,EAAIP,SAASO,GAAK,IAAMH,GAAW,MAG5B,IAAKG,EAAE,IACd,IAAMC,EAAiC,KAHvCH,EAAKA,EAAE,IAAKA,EAAE,KAGCI,SAAS,IAAIC,OAAhB,WAAoCL,EAAEI,SAAS,KAAQJ,EAAEI,SAAS,IACxEE,EAAiC,IAA1BL,EAAEG,SAAS,IAAIC,OAAhB,WAAoCJ,EAAEG,SAAS,KAAQH,EAAEG,SAAS,IACxEG,EAAiC,IAA1BL,EAAEE,SAAS,IAAIC,OAAhB,WAAoCH,EAAEE,SAAS,KAAQF,EAAEE,SAAS,IAC9E,MAAM,IAAN,OAAWD,GAAX,OAAgBG,GAAhB,OAAqBC,K,gCAQLC,GAChB,IAAMC,EAAO,SAAAC,GAAG,OAAKA,EAAIC,QAAQ,cAAc,KACzCC,EAAUJ,EAAKd,UAAUc,EAAKK,QAAQ,MAAMC,MAAM,KACvDC,EAAIpB,SAASc,EAAKG,EAAQ,GAAGlB,UAAU,IAAK,IAC5CsB,EAAIrB,SAASc,EAAKG,EAAQ,IAAK,IAC/BK,EAAItB,SAASc,EAAKG,EAAQ,IAAK,IAC/BjG,EAAIuG,WAAWT,EAAKG,EAAQ,GAAGlB,UAAU,EAAGkB,EAAQ,GAAGP,OAAS,KAAKc,QAAQ,GACvEC,EAAW,CACjBL,EAAEX,SAAS,IACXY,EAAEZ,SAAS,IACXa,EAAEb,SAAS,IACXiB,KAAKC,MAAU,IAAJ3G,GAASyF,SAAS,IAAIV,UAAU,EAAG,IAQ/C,OALA0B,EAASG,SAAQ,SAAUC,EAAMC,GACZ,IAAhBD,EAAKnB,SACRe,EAASK,GAAK,IAAMD,MAGhB,IAAN,OAAYJ,EAASM,KAAK,O,iCAUTC,EAAQC,EAAUC,GACnC,OAAIF,EAAS,EACLC,EAEJD,EAAS,EACLE,EAED,O,sCAUelH,EAAGsG,EAAG/C,GAC5B,MAAqB,kBAAXvD,EAAEuD,IAAuC,kBAAX+C,EAAE/C,GAClCvD,EAAEuD,GAAO+C,EAAE/C,GAGE,kBAAXvD,EAAEuD,IAAuC,kBAAX+C,EAAE/C,IACzCvD,EAAIA,EAAEuD,GAAK4D,gBACXb,EAAIA,EAAE/C,GAAK4D,gBACK,EAAIb,EAAItG,EAAI,EAAI,OAHjC,I,kCAekBoH,EAAM7D,EAAK8D,GAC7B,IAAIlN,EAAOiN,EAIX,OAHGA,IACFjN,EAAOiN,EAAKE,QAAO,SAAAC,GAAI,OAAIA,EAAKhE,KAAS8D,MAEnClN,I,qCAUciN,EAAM7D,EAAK8D,GAChC,IAAIlN,EAAOiN,EAIX,OAHGA,IACFjN,EAAOiN,EAAKE,QAAO,SAAAC,GAAI,OAAIA,EAAKhE,KAAS8D,MAEnClN,I,qCASciN,EAAMI,GAY3B,OADAJ,EAAOA,EAAKE,QAAO,SAAAD,GAAK,OAVL,SAACE,GACnB,IAAK,IAAIhE,KAAOgE,EACf,GAAiB,MAAbA,EAAKhE,KAG2E,IAAhFgE,EAAKhE,GAAKkC,WAAWpB,cAAc6B,QAAQsB,EAAM/B,WAAWpB,eAC/D,OAAO,EAIkBoD,CAAWJ,Q,oCASnBK,GACpB,IAAIC,EAAc,GAClB,IAAK,IAAMpE,KAAOmE,EAAS,CAC1B,GAAIA,EAAQjD,eAAelB,GACVmE,EAAQnE,IAEvBoE,EAAYlO,KAAK8J,GAIpB,OAAOoE,M,KCxMF,SAASC,GAAmBzL,GACjC,MAAO,CACLsB,KAAMC,EACNvB,gBAuCG,SAAS0L,GAAkBlL,GAChC,MAAO,CACLc,KAAMO,EACNrB,a,IC7CImL,GAAYC,KAAZD,QACAE,GAAkBC,KAAlBD,cAEFE,GAAY,SAACC,EAAYC,GAAb,OAChBD,EAAa,cAAC,GAAD,CAAaE,GAAID,IAAgBA,EAAU3C,YAEpD6C,GAAiB,SAAC/E,GACtB,IAAIgF,EAAU,GACVC,EAAY,GAChB,GAAIjF,EAEF,IADA,IAAMkF,EAAMlF,EAAI4C,MAAM,KACbuC,EAAQ,EAAGA,EAAQD,EAAI/C,OAAQgD,IAAS,CAC/C,IAAMC,EAAMF,EAAIC,GACDF,EAAL,IAAVE,EAA2BC,EAAiB,UAAMH,EAAN,YAAmBG,GAC/DJ,EAAQ9O,KAAK+O,GAGjB,OAAOD,GAGHK,GAAiB,SAACnO,GAAW,IAC1B2B,EAA6E3B,EAA7E2B,aAAcyM,EAA+DpO,EAA/DoO,UAAWC,EAAoDrO,EAApDqO,eAAgBC,EAAoCtO,EAApCsO,aAAclB,EAAsBpN,EAAtBoN,kBACzDmB,GAAYC,GAAMC,cAAclB,MAAiBmB,SAAS,MAC1DC,EAAiB,WAClBJ,GACHnB,GAAkB,IAGnB,OACE,cAAC,KAAD,CACE1J,MAAO/B,IAAiBC,KAAiB,QAAU,OACnDgN,KAAK,SACLC,MAAO,CAAEC,OAAQ,OAAQC,YAAa,GACtCC,oBAAqB,QAACZ,QAAD,IAACA,OAAD,EAACA,EAAWtF,KACjCmG,gBAAiBpB,GAAc,OAACO,QAAD,IAACA,OAAD,EAACA,EAAWtF,KAC3C5I,UAAWmO,EAAiB,mBAAqB,GANnD,SAQGhF,GAAiB6F,KAAI,SAACC,GAAD,OACpBA,EAAK/F,QAAQ6B,OAAS,EACpB,cAAC,KAAKmE,UAAN,CAEEpG,MAAOyE,GAAUa,EAAca,EAAKnG,OAFtC,SAIGmG,EAAK/F,QAAQ8F,KAAI,SAACG,GAAD,OAChBA,EAAajG,QAAQ6B,OAAS,EAC5B,cAACoC,GAAD,CACEpE,KACEoG,EAAapG,KACX,cAAC,GAAD,CAAMjG,KAAI,OAAEqM,QAAF,IAAEA,OAAF,EAAEA,EAAcpG,OACxB,KAGND,MAAOyE,GAAUa,EAAce,EAAarG,OAP9C,SASGqG,EAAajG,QAAQ8F,KAAI,SAACI,GAAD,OACxB,eAAC,KAAKC,KAAN,WACGD,EAAcrG,KACb,cAAC,GAAD,CAAMjG,KAAI,OAAEsM,QAAF,IAAEA,OAAF,EAAEA,EAAerG,OACzB,KACJ,+BACGwE,GAAUa,EAAcgB,EAActG,SAEzC,cAAC,KAAD,CAAMwG,QAAS,kBAAMb,KAAkBc,GAAIH,EAAcvG,SAP3CuG,EAAcxG,SAJ3BuG,EAAavG,KAgBpB,eAAC,KAAKyG,KAAN,WACGF,EAAapG,KAAO,cAAC,GAAD,CAAMjG,KAAMqM,EAAapG,OAAW,KACzD,+BAAOwE,GAAUa,EAAce,EAAarG,SAC5C,cAAC,KAAD,CAAMwG,QAAS,kBAAMb,KAAkBc,GAAIJ,EAAatG,SAH1CsG,EAAavG,SA3B5BqG,EAAKrG,KAoCZ,eAAC,KAAKyG,KAAN,WACGJ,EAAKlG,KAAO,cAAC,GAAD,CAAMjG,KAAI,OAAEmM,QAAF,IAAEA,OAAF,EAAEA,EAAMlG,OAAW,KAC1C,+BAAOwE,GAAUa,EAAD,OAAea,QAAf,IAAeA,OAAf,EAAeA,EAAMnG,SACpCmG,EAAKpG,KAAO,cAAC,KAAD,CAAMyG,QAAS,kBAAMb,KAAkBc,GAAIN,EAAKpG,OAAW,OAH1DoG,EAAKrG,WAWzB4G,GAAgB,SAAC1P,GAAW,IACxBgC,EAA8BhC,EAA9BgC,YAAasM,EAAiBtO,EAAjBsO,aACrB,OACE,cAAC,KAAD,CAAMM,KAAK,aAAaC,MAAO,CAAEc,gBAAiB3N,GAAlD,SACGqH,GAAiB6F,KAAI,SAACC,GAAD,OACpBA,EAAK/F,QAAQ6B,OAAS,EACpB,cAACoC,GAAD,CAEEuC,eAAe,eACf5G,MACE,iCACGmG,EAAKlG,KAAO,cAAC,GAAD,CAAMjG,KAAI,OAAEmM,QAAF,IAAEA,OAAF,EAAEA,EAAMlG,OAAW,KAC1C,+BAAOwE,GAAUa,EAAca,EAAKnG,YAN1C,SAUGmG,EAAK/F,QAAQ8F,KAAI,SAACG,GAAD,OAChBA,EAAajG,QAAQ6B,OAAS,EAC5B,cAACoC,GAAD,CAEEpE,KACEoG,EAAapG,KACX,cAAC,GAAD,CAAMjG,KAAI,OAAEqM,QAAF,IAAEA,OAAF,EAAEA,EAAcpG,OACxB,KAEND,MAAOyE,GAAUa,EAAce,EAAarG,OAP9C,SASGqG,EAAajG,QAAQ8F,KAAI,SAACI,GAAD,OACxB,eAAC,KAAKC,KAAN,WACE,+BACG9B,GAAUa,EAAcgB,EAActG,SAEzC,cAAC,KAAD,CAAMyG,GAAIH,EAAcvG,SAJVuG,EAAcxG,SAT3BuG,EAAavG,KAkBpB,eAAC,KAAKyG,KAAN,WACGF,EAAapG,KACZ,cAAC,GAAD,CAAMjG,KAAI,OAAEqM,QAAF,IAAEA,OAAF,EAAEA,EAAcpG,OACxB,KACJ,+BAAOwE,GAAUa,EAAce,EAAarG,SAC5C,cAAC,KAAD,CAAMyG,GAAIJ,EAAatG,SALTsG,EAAavG,SA9B5BqG,EAAKrG,KAyCZ,eAAC,KAAKyG,KAAN,WACGJ,EAAKlG,KAAO,cAAC,GAAD,CAAMjG,KAAI,OAAEmM,QAAF,IAAEA,OAAF,EAAEA,EAAMlG,OAAW,KAC1C,+BAAOwE,GAAUa,EAAD,OAAea,QAAf,IAAeA,OAAf,EAAeA,EAAMnG,SACpCmG,EAAKpG,KAAO,cAAC,KAAD,CAAM0G,GAAIN,EAAKpG,OAAW,OAHzBoG,EAAKrG,WAwBhB+G,gBALS,SAAC,GAAe,IAAbnM,EAAY,EAAZA,MAEzB,MAAO,CAAE/B,aAD6B+B,EAA9B/B,aACeK,YADe0B,EAAhB1B,eAIgB,CAAEoL,sBAA3ByC,EAbK,SAAC7P,GACnB,OAAOA,EAAMgD,OAASjB,KACpB,cAAC,GAAD,eAAoB/B,IAEpB,cAAC,GAAD,eAAmBA,OC1Jf8P,GAAUC,KAAVD,MAyBOD,gBALS,SAAC,GAAe,IAAbnM,EAAY,EAAZA,MAEzB,MAAO,CAAEhC,aAD+BgC,EAAhChC,aACeC,aADiB+B,EAAlB/B,gBAITkO,EAvBQ,SAAC,GAAmF,IAAlFnO,EAAiF,EAAjFA,aAAcC,EAAmE,EAAnEA,aAAcyM,EAAqD,EAArDA,UAAWC,EAA0C,EAA1CA,eAA0C,IAA1BC,aACxEtO,EAAQ,CAAE2B,eAAcyM,YAAYC,iBAAgBC,kBAD8C,UAExG,OACE,cAACwB,GAAD,CACE5P,UAAS,mBAAcyB,IAAiBW,KAAe,gBAAkB,IACzE0N,MAAO5N,KACP6N,UAAWvO,EAHb,SAKE,cAAC,cAAD,CAAYwO,UAAQ,EAApB,SACE,cAAC,GAAD,aACElN,KAAMjB,MACF/B,WCKC6P,gBALS,SAAC,GAEvB,MAAO,CAAE7N,YAF4B,EAAZ0B,MACjB1B,eAIK6N,EAnBO,SAAC,GAAwC,IAAvC7N,EAAsC,EAAtCA,YAAsC,IAAzBsM,aAC9BtO,EAAQ,CAAEgC,cAAasM,kBADgC,UAE7D,OACC,qBAAKpO,UAAS,kBAAasO,GAAM2B,iBAAiBnO,IAAgB6M,MAAO,CAACc,gBAAiB3N,GAA3F,SACC,qBAAK9B,UAAU,kBAAf,SACC,cAAC,GAAD,aACC8C,KAAMT,MACFvC,W,mBCRHwI,GAAO,cAAC4H,GAAA,EAAD,CAAiBvB,MAAO,CAAEwB,SAAU,IAAMC,MAAI,IAErDC,GAAU,SAACvQ,GAAW,IACnBwQ,EAAiBxQ,EAAjBwQ,MAAOC,EAAUzQ,EAAVyQ,MACf,OACC,qBAAKvQ,UAAS,uBAAkBsQ,EAAlB,kBAAiCC,GAA/C,SACC,cAAC,KAAD,CAAMC,UAAWlI,QAUpB+H,GAAQhQ,aAAe,CACtBiQ,MAAO,SACPC,MAAO,UAGOF,U,UCnBPhD,GAAkBC,KAAlBD,cAEFoD,GAAqB,SAAC3Q,EAAOuO,GAAc,IACvC7M,EAA0B1B,EAA1B0B,aACFkP,EAD4B5Q,EAAZ8B,UACOS,KAC7B,OAAGgM,IAAavO,EAAM6Q,WACb,EAEND,EACM,OAGD,GAAN,OADClP,EACSW,KAEAD,KAFV,OAME0O,GAAU,SAAC9Q,GAAW,IAClB0B,EAA2B1B,EAA3B0B,aACR,MAAgB,UADmB1B,EAAb+Q,SAEjBrP,EACM,yBAEF,sBAGLA,EACK,mBAEF,iBAGHsP,GAAiB,SAACzC,EAAUsC,GAChC,OAAGtC,IAAasC,EACP,SAEA,QAoBIhB,gBALS,SAAC,GAAe,IAAbnM,EAAY,EAAZA,MAEzB,MAAO,CAAEhC,aAD0BgC,EAA3BhC,aACeI,QADY4B,EAAb5B,WAIT+N,EAhBK,SAAC7P,GACnB,IAAMuO,GAAYC,GAAMC,cAAclB,MAAiBmB,SAAS,MAChE,OACE,qBACExO,UAAW8Q,GAAezC,EAAUvO,EAAM6Q,YAC1ChC,MAAO,CAACmB,MAAM,GAAD,OAAKW,GAAmB3Q,EAAOuO,KAF9C,SAGE,qBAAK0C,IAAKH,GAAQ9Q,GAAQkR,IAAG,UAAK7P,IAAL,gB,oBCCpBwO,gBALS,SAAC,GAAe,IAAbnM,EAAY,EAAZA,MAEzB,MAAO,CAAEhC,aADyCgC,EAA1ChC,aACeC,aAD2B+B,EAA5B/B,aACeO,UADawB,EAAdxB,aAIE,CAAEkL,sBAA3ByC,EA5CU,SAAC,GAOnB,IANLlO,EAMI,EANJA,aACAO,EAKI,EALJA,UACAkL,EAII,EAJJA,kBACAgB,EAGI,EAHJA,UACAC,EAEI,EAFJA,eAEI,IADJC,aAEMtO,EAAQ,CAAE2B,eAAcyM,YAAWC,iBAAgBC,kBADrD,UAGE6C,EAAU,WACd/D,GAAkB,IAGpB,OACE,cAAC,KAAD,CACEgE,UAAU,OACVC,UAAU,EACVF,QAASA,EACTG,QAASpP,EACTqP,UAAW,CAAEC,QAAS,GALxB,SAOE,eAACzR,GAAA,EAAD,CAAMO,cAAc,SAASJ,UAAU,QAAvC,UACE,eAACH,GAAA,EAAD,CAAMK,eAAe,UAAUD,WAAW,SAA1C,UACE,cAAC,GAAD,CAAM0Q,YAAY,IAClB,qBAAK3Q,UAAU,YAAYsP,QAAS,kBAAM2B,KAA1C,SACE,cAACM,GAAA,EAAD,SAGJ,qBAAKvR,UAAU,kBAAf,SACE,cAAC,cAAD,CAAYgQ,UAAQ,EAApB,SACE,cAAC,GAAD,aAAalN,KAAMjB,MAAmB/B,gB,mGCUnC0R,GAhDK,SAAA1R,GAAU,IAErB2R,EAA0B3R,EAA1B2R,YAFoB,EAEM3R,EAAb0K,aAFO,MAED,GAFC,IAIEkH,oBAAS,GAJX,oBAIrBN,EAJqB,KAIZO,EAJY,OAKUD,mBAASlH,GALnB,oBAKrBoH,EALqB,KAKRC,EALQ,OAMIH,mBAASlH,GANb,oBAMrBsH,EANqB,KAMXC,EANW,KAQ5BC,qBAAU,WACTD,EAAYvH,GACZqH,EAAerH,KACb,CAACA,IAEJ,IAAMyH,EAAmB,WACxBN,GAAYP,IAWb,OACC,sBAAKpR,UAAU,eAAf,UACC,qBAAKA,UAAU,wBAAf,SACC,qBAAKA,UAAU,QAAQ2O,MAAO,CAACc,gBAAiBqC,GAAsB,WAAYxC,QAAS2C,MAG3Fb,GACC,qCACC,qBAAKpR,UAAU,wBAAwBsP,QAAS2C,IAChD,cAAC,KAAD,CAAczH,MAAOoH,EAAaM,SAjBjB,SAACxF,GAAW,IAC1ByF,EAAOzF,EAAPyF,IACDjH,EAAI,cAAUiH,EAAI1G,EAAd,aAAoB0G,EAAIzG,EAAxB,aAA8ByG,EAAIxG,EAAlC,aAAwCwG,EAAI9M,EAA5C,KACV0M,EAAY7G,GACZ2G,EAAeM,GACfV,EAAY/E,a,uECdd,IAAM0F,GAAmB,SAAC,GAAgB,IACnCC,EANP,SAA4B1Q,GAE3B,OADa2Q,GAAK3F,QAAO,SAAAqB,GAAG,OAAKA,EAAIuE,SAAW5Q,KACpC,GAIK6Q,CADuB,EAAb7Q,QAEpB8Q,EAAkBJ,EAAlBI,SAAU1J,EAAQsJ,EAARtJ,KACjB,OACC,sBAAK/I,UAAU,4BAAf,UACC,qBAAK2O,MAAO,CAAC+D,SAAU,QAAS3B,IAAG,qBAAgBhI,EAAhB,QAA4BiI,IAAKyB,IACpE,uBAAMzS,UAAU,4BAAhB,UAA6CyS,EAA7C,IAAuD,cAACE,GAAA,EAAD,CAAc3S,UAAU,wBAwDnE2P,gBALS,SAAC,GAEvB,MAAO,CAAEhO,OAF4B,EAAZ6B,MACjB7B,UAI8B,CAACiR,eRjDlC,SAAwBjR,GAC7B,MAAO,CACLmB,KAAME,EACNrB,YQ8CWgO,EAnDY,SAAC,GAA+C,IAA7ChO,EAA4C,EAA5CA,OAAQkR,EAAoC,EAApCA,cAAeD,EAAqB,EAArBA,eAC9CE,EACL,cAAC,KAAD,UAEER,GAAKtD,KAAI,SAAChB,EAAK7B,GAAO,OACrB,cAAC,KAAKkD,KAAN,CAECrP,UAAW2B,IAAWqM,EAAIuE,OAAQ,gCAAiC,GACnEjD,QAAS,kBAAMsD,EAAe5E,EAAIuE,SAHnC,SAKC,uBAAMvS,UAAU,oDAAhB,UACC,gCACC,qBAAK2O,MAAO,CAAC+D,SAAU,QAAS3B,IAAG,qBAAgB/C,EAAIjF,KAApB,QAAgCiI,IAAKhD,EAAIyE,WAC5E,sBAAMzS,UAAU,0BAAhB,SAA2CgO,EAAIyE,cAE/C9Q,IAAWqM,EAAIuE,OAAQ,cAACQ,GAAA,EAAD,CAAe/S,UAAU,iBAAoB,SATjEmM,QAgBV,OACC,cAAC,KAAD,CAAU+E,UAAU,cAAc8B,QAASF,EAAgBG,QAAS,CAAC,SAArE,SAEEJ,EAEC,mBAAGK,KAAK,KAAKlT,UAAU,YAAYsP,QAAS,SAAA6D,GAAC,OAAIA,EAAEC,kBAAnD,SACC,cAAC,GAAD,CAAkBzR,OAAQA,MAK3B,cAAC,KAAD,CAAM+M,KAAK,aAAX,SACC,cAAC,KAAKW,KAAN,UACC,mBAAG6D,KAAK,KAAK5D,QAAS,SAAA6D,GAAC,OAAIA,EAAEC,kBAA7B,SACC,cAACC,GAAA,EAAD,CAAgBrT,UAAU,6B,UCnC5BsT,GAAe,CACpB,UACA,UACA,UACA,UACA,WAGKC,GAAa,SAAC,GAAD,IAAElK,EAAF,EAAEA,KAAMmK,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,SAA5B,OAClB,sBAAK1T,UAAS,eAAU0T,EAAU,GAAK,qDAAvC,UACC,qBAAK1T,UAAS,UAAKyT,EAAW,cAAgB,GAAhC,YAAsCC,EAAU,OAAS,IAAvE,SAA8ErK,IAC9E,8BAAMmK,QAyJFG,GAAqB,CAC1B1G,sBACA2G,gBT9JM,SAAyBhS,GAC9B,MAAO,CACLkB,KAAMI,EACNtB,YS4JHiS,iBT7KM,SAA0BpS,GAC/B,MAAO,CACLqB,KAAMG,EACNxB,iBS2KHqS,oBTzJM,SAA6BhS,GAClC,MAAO,CACLgB,KAAMK,EACNrB,gBSuJHiS,uBTnJM,SAAgChS,GACrC,MAAO,CACLe,KAAMM,EACNrB,mBSiJHiS,cTtIM,SAAuB/R,GAC5B,MAAO,CACLa,KAAMQ,EACNrB,kBSsIW0N,gBAdS,SAAC,GAAe,IAAbnM,EAAY,EAAZA,MAEzB,MAAO,CAAE5B,QAD2F4B,EAA5F5B,QACUH,aADkF+B,EAAnF/B,aACeD,aADoEgC,EAArEhC,aACeM,YADsD0B,EAAvD1B,YACcC,eADyCyB,EAA1CzB,eACiBJ,OADyB6B,EAA1B7B,OACSM,aADiBuB,EAAlBvB,gBAa5C0R,GAAzBhE,EA9JkB,SAAC,GAc3B,IAoCsBsE,EAjD5BrS,EAaK,EAbLA,QACAH,EAYK,EAZLA,aACAD,EAWK,EAXLA,aACAM,EAUK,EAVLA,YACAC,EASK,EATLA,eACAJ,EAQK,EARLA,OACAM,EAOK,EAPLA,aACAgL,EAMK,EANLA,mBACA2G,EAKK,EALLA,gBACAC,EAIK,EAJLA,iBACAC,EAGK,EAHLA,oBACAC,EAEK,EAFLA,uBACAC,EACK,EADLA,cAEMtD,EAAW9O,IAAYS,KACvB6R,EAAa1S,EAFd,EAIwB2S,8BAArBC,EAJH,EAIGA,SAAUC,EAJb,EAIaA,OAkClB,OACC,qCACC,sBAAKrU,UAAU,OAAf,UACC,oBAAIA,UAAU,wBAAd,wBAEC0Q,EACA,cAAC,GAAD,CACCrH,KAAK,iBACLqK,UAAQ,EACRF,SACC,cAAC,GAAD,CAAahJ,MAAO1I,EAAa2P,YAnCZ,SAAC/E,GAC3BqH,EAAuB,IADc,IAE7B5B,EAAQzF,EAARyF,IACFjH,EAAI,eAAWiH,EAAI1G,EAAf,aAAqB0G,EAAIzG,EAAzB,aAA+ByG,EAAIxG,EAAnC,aAAyCwG,EAAI9M,EAA7C,KACJ2E,EAAMsE,GAAMgG,UAAUpJ,GAC5B4I,EAAoB9J,QAkCjB,cAAC,GAAD,CACCX,KAAK,oBACLqK,UAAQ,EACRF,SACC,cAAC,GAAD,CAAahJ,MAAOzI,EAAgB0P,YApCZ,SAAC/E,GAAW,IACjCyF,EAAQzF,EAARyF,IACFjH,EAAI,eAAWiH,EAAI1G,EAAf,aAAqB0G,EAAIzG,EAAzB,aAA+ByG,EAAIxG,EAAnC,aAAyCwG,EAAI9M,EAA7C,KACJ2E,EAAMsE,GAAMgG,UAAUpJ,GAC5B6I,EAAuB/J,QAqCrB,cAAC,GAAD,CACCX,KAAK,mBACLmK,SACC,eAAC,KAAMe,MAAP,CACCC,KAAK,QACLtC,SAAU,SAAAiB,GAAC,OAvCOzG,EAuCYyG,EAAEsB,OAAO/H,MAtC5CqH,EAAuB,IACpBrH,IAAUrK,OACZyR,EAAoBR,GAAa,IACjCrG,GAAmB,SAEpB2G,EAAgBlH,GANM,IAACA,GAwClBA,MAAO9K,EAHR,UAKC,cAAC,KAAM8S,OAAP,CAAchI,MAAO7K,KAArB,kBACA,cAAC,KAAM6S,OAAP,CAAchI,MAAOrK,KAArB,sBAIH,cAAC,GAAD,CACCgH,KAAK,kBACLmK,SACC,eAAC,KAAMe,MAAP,CACCd,SAAU/C,EACV8D,KAAK,QACLtC,SAAU,SAAAiB,GAAC,OAAIU,EAAiBV,EAAEsB,OAAO/H,QACzCA,MAAOjL,EAJR,UAMC,cAAC,KAAMiT,OAAP,CAAchI,MAAOhL,KAArB,mBACA,cAAC,KAAMgT,OAAP,CAAchI,MAAOtK,KAArB,qBAGFqR,SAAU/C,IAEX,cAAC,GAAD,CACCrH,KAAK,qBACLmK,SACC,cAAC,KAAD,CACCC,SAAU/C,EACViE,QAAST,EACThC,SAAU,kBAAMjF,GAAoBzL,MAGtCiS,SAAU/C,IAEX,cAAC,GAAD,CACCrH,KAAK,cACLmK,SACC,cAAC,KAAD,CAAQmB,QAA0B,SAAjB1S,EAAyBiQ,SAjG3B,SAAC0C,GACpBb,EAAuB,IACvB,IAAMc,EAAeD,EAAY,OAAS,QAC1CZ,EAAca,GACZT,EAAS,CAAE5Q,MAAO6Q,EAAOQ,aAiG1B,sBAAK7U,UAAU,OAAf,UACC,oBAAIA,UAAU,wBAAd,oBACA,cAAC,GAAD,CACCqJ,KAAK,YACLmK,SACC,cAAC,GAAD,CAAaX,eAAa,SAI7B,8BACC,cAAC,KAAD,CACCiC,MAlFwBb,EAkFC,CAAErS,UAASH,eAAcD,eAAcM,cAAaC,iBAAgBJ,SAAQM,gBAlF7D8S,KAAKC,UAAUf,EAAa,KAAM,IAmF1EgB,OAAQ,kBAAM7V,KAAQ8V,QAAQ,qFAF/B,SAIC,cAAC,KAAD,CAAQnM,KAAM,cAACoM,GAAA,EAAD,IAAmBC,OAAK,EAAtC,SACC,4DCzKOC,GAAb,+MACCzS,MAAQ,CAAEwO,SAAS,GADpB,EAGEkE,WAAa,WACX,EAAKC,SAAS,CACZnE,SAAS,KALf,EASEH,QAAU,WACR,EAAKsE,SAAS,CACZnE,SAAS,KAXf,wDAgBE,OACI,qCACE,cAAC,KAAD,CAAM1C,KAAK,aAAX,SACE,cAAC,KAAKW,KAAN,CAAWC,QAAS/G,KAAK+M,WAAzB,SACE,cAACE,GAAA,EAAD,CAAiBxV,UAAU,sBAG/B,cAAC,KAAD,CACE8I,MAAM,eACNoI,UAAU,QACVpB,MAAO,IACPmB,QAAS1I,KAAK0I,QACdG,QAAS7I,KAAK3F,MAAMwO,QALtB,SAOE,cAAC,GAAD,aA9BV,GAA8B1I,aA0CfiH,gBALS,SAAC,GAEvB,MAAO,CAAEhO,OAF4B,EAAZ6B,MACjB7B,UAIKgO,CAAyB0F,I,gFCtBxC,IAAMI,GAbN,SAASC,EAAeC,EAAgBC,GACvCA,EAAaA,GAA0B,GADY,qBAE5BD,GAF4B,IAEnD,2BAAwC,CAAC,IAA7BE,EAA4B,QACT,IAA3BA,EAAQ3M,QAAQ6B,QAClB6K,EAAW9W,KAAK+W,GAEdA,EAAQ3M,QAAQ6B,OAAS,GAC3B2K,EAAcG,EAAQ3M,QAAS0M,IAPkB,8BAUnD,OAAOA,EAGWF,CAAcvM,IAE3B2M,GAAkB,SAAAC,GACvB,OAAQA,GACP,IAAK,aACJ,OAAO,cAAC/M,GAAA,EAAD,CAAmBhJ,UAAU,iBACrC,IAAK,OACJ,OAAO,cAACgW,GAAA,EAAD,CAAkBhW,UAAU,gBACpC,IAAK,aACJ,OAAO,cAACiW,GAAA,EAAD,CAAmBjW,UAAU,iBACrC,IAAK,QACJ,OAAO,cAACkW,GAAA,EAAD,CAAkBlW,UAAU,iBACpC,QACC,OAAO,OAqEKmW,GA7CK,SAAArW,GAAU,IACrBsW,EAAkCtW,EAAlCsW,OAAQC,EAA0BvW,EAA1BuW,MAAOhI,EAAmBvO,EAAnBuO,SAAUK,EAAS5O,EAAT4O,KADL,EAEFgD,mBAAS,IAFP,oBAErBhF,EAFqB,KAEd4J,EAFc,OAGE5E,mBAAS,IAHX,oBAGrB6E,EAHqB,KAGZC,EAHY,KAItBC,EAAWC,iBAAO,MAuBxB,OAJGN,GAHFK,EAASE,QAAQC,QAQjB,cAAC,KAAD,CACCC,IAAKJ,EACLzW,UAAS,2BAAsBqO,EAAU,YAAc,GAA9C,YAA6D,UAATK,EAAmB,QAAU,IAC1FoI,kBAAkB,sBAClBP,QAASA,EACTQ,SA3Be,WAChBT,EAAS,IACTE,EAAW,IACRH,GACFA,KAwBAW,SApBe,SAAAlK,GAChBwJ,EAASxJ,GACT0J,EAAY1J,EApCa2I,GAAWzG,KAAI,SAACpC,GAC1C,IAAMmJ,EAAWnJ,EAAKhE,IAAI4C,MAAM,KAAK,GACrC,MAAO,CACNkB,MAAOE,EAAK/D,KACZoO,MACC,cAAC,KAAD,CAAM1H,GAAI3C,EAAK/D,KAAf,SACC,sBAAK7I,UAAU,mBAAf,UACC,qBAAKA,UAAU,OAAf,SACE8V,GAAgBC,KAElB,gCACC,qBAAK/V,UAAU,uBAAf,SAAsC,cAAC,GAAD,CAAa0N,GAAId,EAAK9D,UAC5D,sBAAK9I,UAAU,0BAAf,UAA0C+V,EAA1C,mBAwBqB,KAmBxBrJ,MAAOA,EACPwK,aAAc,SAACC,EAAYC,GAAb,OACqD,IAAlEA,EAAO1K,MAAMhD,cAAc6B,QAAQ4L,EAAWzN,gBAThD,SAYC,cAAC,KAAD,CAAO2N,YAAY,YAAaC,OAAQ,cAACC,GAAA,EAAD,CAAgBvX,UAAU,cC1EtD2P,gBALS,SAAC,GAEvB,MAAO,CAAE5N,eAF4B,EAAZyB,MACjBzB,kBAI8B,GAAzB4N,EArBU,SAAC7P,GAAW,IAC5BsW,EAAkCtW,EAAlCsW,OAAQC,EAA0BvW,EAA1BuW,MAAOtU,EAAmBjC,EAAnBiC,eACjB2M,EAAOJ,GAAM2B,iBAAiBlO,GAEpC,OACC,sBAAK/B,UAAS,qBAAgBoW,EAAS,oBAAsB,GAA/C,YAAqD1H,GAAQC,MAAO,CAACc,gBAAiB1N,GAApG,UACC,qBAAK/B,UAAU,kCAAf,SACC,cAAC,GAAD,CAAaqW,MAAOA,EAAOD,OAAQA,MAEpC,qBAAKpW,UAAU,YAAYsP,QAAS+G,EAApC,SACC,cAACmB,GAAA,EAAD,YCPIC,GAAW5H,KAAX4H,OA2EO9H,gBALS,SAAC,GAAe,IAAbnM,EAAY,EAAZA,MAEzB,MAAO,CAAEhC,aADmEgC,EAApEhC,aACeI,QADqD4B,EAAtD5B,QACUG,eAD4CyB,EAA7CzB,eACiBC,UAD4BwB,EAA7BxB,UACYC,aADiBuB,EAAlBvB,gBAIpB,CAACgL,sBAAoBC,sBAA9CyC,EAzEU,SAAA7P,GAAU,IACzB0B,EAAoH1B,EAApH0B,aAAcQ,EAAsGlC,EAAtGkC,UAAWJ,EAA2F9B,EAA3F8B,QAASG,EAAkFjC,EAAlFiC,eAAgBkL,EAAkEnN,EAAlEmN,mBAAoBC,EAA8CpN,EAA9CoN,kBAAmBmB,EAA2BvO,EAA3BuO,SAAUpM,EAAiBnC,EAAjBmC,aAD3E,EAEQyP,oBAAS,GAFjB,oBAEzBgG,EAFyB,KAEXC,EAFW,KAI1BC,EAAgB,WACpBD,GAAgB,IAWZjH,EAAW9O,IAAYS,KAOvBwV,EALA9V,EAGGuM,GAAM2B,iBAAiBlO,GAFrBuM,GAAM2B,iBAAkC,SAAjBhO,EAA0B,SAAW,WAsBvE,OANA+P,qBAAU,WACJ3D,GACFuJ,OAKF,cAACH,GAAD,CAAQzX,UAAS,qBAAgB6X,GAAWlJ,MAAO,CAACc,gBAAiB1N,GAArE,SACE,sBAAK/B,UAAS,6BAAwB0Q,EAAW,iBAAmB,IAApE,UACE,cAAC,GAAD,CAAMG,SAAUgH,IAChB,sBAAK7X,UAAU,MAAM2O,MAAO,CAACmB,MAAM,eAAD,OApBnCY,GAAYrC,EACN,MAGD,GAAN,OADC7M,EACSW,KAEAD,KAFV,MAgBoC,MAAlC,UACE,qBAAKlC,UAAU,WAAf,SACE,oBAAIA,UAAU,6CAAd,SAEI0Q,IAAarC,EACb,KAEA,oBAAIrO,UAAU,yCAAyCsP,QAAS,WA3CxEjB,EAGFnB,GAAmBlL,GAFnBiL,GAAoBzL,IA0CV,SACGA,GAAgB6M,EAAW,cAACyJ,GAAA,EAAD,CAAoB9X,UAAU,aAAgB,cAAC+X,GAAA,EAAD,CAAkB/X,UAAU,mBAK9G,qBAAKA,UAAU,YAAf,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAWoW,OAAQsB,EAAcrB,MAAOuB,e,UCpE9CI,GAAiB,CACpB,OAAS,cAAC,GAAD,CAAatK,GAAG,UAG1BvE,GAAiB8C,SAAQ,SAAC+B,EAAK7B,GAC9B,IAAM8L,EAAmB,SAACC,GAAD,OAASF,GAAeE,EAAIrP,MAAQ,cAAC,GAAD,CAAa6E,GAAIwK,EAAIpP,SAClFmP,EAAiBjK,GACbA,EAAI9E,SACP8E,EAAI9E,QAAQ+C,SAAS,SAAA+B,GACpBiK,EAAiBjK,GACdA,EAAI9E,SACN8E,EAAI9E,QAAQ+C,SAAS,SAAA+B,GACpBiK,EAAiBjK,YAOtB,IAAMmK,GAAkBC,cAAW,SAAAtY,GAAU,IAEtCuY,EADevY,EAAbd,SACsBsZ,SAAS9M,MAAM,KAAKmB,QAAO,SAAAR,GAAC,OAAIA,KACxDoM,EAAkBF,EAAarJ,KAAI,SAACwJ,EAAGzK,GAC1C,IAAM0K,EAAG,WAAOJ,EAAaK,MAAM,EAAG3K,EAAQ,GAAG3B,KAAK,MACtD,OACE,cAAC,KAAWiD,KAAZ,UACE,cAAC,KAAD,CAAME,GAAIkJ,EAAV,SAAgBT,GAAeS,MADXA,MAM1B,OACA,cAAC,KAAD,UACEF,OAaWI,GARf,2KAEE,OACC,cAACR,GAAD,QAHH,GAAmCzP,aC1BpBkQ,GAdW,SAAC,GAAwB,IAAtB9P,EAAqB,EAArBA,MAC5B,OADiD,EAAd+P,QAGjC,sBAAK7Y,UAAU,kBAAf,UACC,oBAAIA,UAAU,iCAAd,SACC,cAAC,GAAD,CAAa0N,GAAI5E,GAAe,WAEjC,cAAC,GAAD,OAGA,MCXW,SAASgQ,KACvB,OACC,wBAAQ9Y,UAAU,SAAlB,SACC,gEAA6B,IAAI+Y,MAAOC,eAAxC,IAAyD,sBAAMhZ,UAAU,uBAAhB,mBAA2CmB,OAApG,6B,WCCG8X,GAAiBC,gBAAK,kBAAM,4CAC5BC,GAAiBD,gBAAK,kBAAM,kCAErBE,GAAW,WAEtB,OACE,cAAC,WAAD,CAAUC,SAAU,cAAC,GAAD,CAAS9I,MAAM,YAAnC,SACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAO1H,KAAI,UAAKxH,IAAL,SAA6BiY,UAAWJ,gBAAK,kBAAM,oCAC9D,cAAC,KAAD,CAAOrQ,KAAI,UAAKxH,IAAL,aAAiCiY,UAAWJ,gBAAK,kBAAM,2DAClE,cAAC,KAAD,CAAOrQ,KAAI,UAAKxH,IAAL,UAA8BkY,OAAQ,kBAAM,cAACN,GAAD,CAAgBvW,MAN5D,WAOX,cAAC,KAAD,CAAOmG,KAAI,UAAKxH,IAAL,UAA8BkY,OAAQ,kBAAM,cAACJ,GAAD,CAAgBzW,MAP5D,WAQX,cAAC,KAAD,CAAU8W,KAAI,UAAKnY,KAAmBkO,GAAE,UAAKlO,IAAL,iBAMjCmH,OAAMiR,KAAKL,ICDlBM,GAAY7J,KAAZ6J,QACArM,GAAkBC,KAAlBD,cAEKsM,GAAY,SAAC,GAAyC,IAAvCnY,EAAsC,EAAtCA,aAAcI,EAAwB,EAAxBA,QAAS5C,EAAe,EAAfA,SAC3C4a,EAAmBtL,GAAMvE,aAAaZ,GAAkBnK,EAASsZ,UAEjEjK,GADUC,GAAMC,cAAclB,MACVmB,SAAS,MAC7BqL,EAAYjY,IAAYC,KACxB6O,EAAW9O,IAAYS,KAU7B,MAAe,YAFI8R,8BAAXzU,OAGC,cAAC,GAAD,CAAS6Q,MAAM,SAItB,eAAC,KAAD,WACE,cAAC,GAAD,CAAWlC,SAAUA,IACnBqC,IAAarC,EAAY,cAAC,GAAD,CAAQH,UAAW0L,IAAsB,KACpE,eAAC,KAAD,CAAQ5Z,UAAU,gBAAlB,UACI6Z,IAAcxL,EAAY,cAAC,GAAD,CAASH,UAAW0L,IAAsB,KACtE,eAAC,KAAD,CAAQ5Z,UAAU,aAAa2O,MAAO,CAACmL,YAlBxCpJ,GAAYrC,EACN,EAEF7M,EAAeW,KAA2BD,MAe7C,UACE,sBAAKlC,UAAS,sBAAiB0Q,EAAW,iBAAmB,IAA7D,UACE,cAAC,GAAD,CAAYmI,QAAO,OAAEe,QAAF,IAAEA,OAAF,EAAEA,EAAkB3Q,WAAYH,MAAK,OAAE8Q,QAAF,IAAEA,OAAF,EAAEA,EAAkB9Q,QAC5E,cAAC4Q,GAAD,UACE,cAAC,GAAD,SAGJ,cAACZ,GAAD,UAGHzK,GAAY,cAAC,GAAD,QAUJsB,gBALS,SAAC,GAAe,IAAbnM,EAAY,EAAZA,MAEzB,MAAO,CAAEhC,aADkCgC,EAAnChC,aACeI,QADoB4B,EAArB5B,QACUD,OADW6B,EAAZ7B,UAIlBgO,CAAyBnH,IAAMiR,KAAKE,KCjDpCP,GAlBS,WACtB,OACE,cAAC,WAAD,CAAUC,SAAU,cAAC,GAAD,CAAS9I,MAAM,SAAnC,SACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAO1H,KAAI,UAAKvH,IAAL,UAA+BgY,UAAWJ,gBAAK,kBAAM,uEAChE,cAAC,KAAD,CAAOrQ,KAAI,UAAKvH,IAAL,YAAiCgY,UAAWJ,gBAAK,kBAAM,uEAClE,cAAC,KAAD,CAAOrQ,KAAI,UAAKvH,IAAL,YAAiCgY,UAAWJ,gBAAK,kBAAM,gEAClE,cAAC,KAAD,CAAOrQ,KAAI,UAAKvH,IAAL,eAAoCgY,UAAWJ,gBAAK,kBAAM,wEACrE,cAAC,KAAD,CAAOrQ,KAAI,UAAKvH,IAAL,eAAoCgY,UAAWJ,gBAAK,kBAAM,iEACrE,cAAC,KAAD,CAAOrQ,KAAI,UAAKvH,IAAL,oBAAyCgY,UAAWJ,gBAAK,kBAAM,iEAC1E,cAAC,KAAD,CAAOrQ,KAAI,UAAKvH,IAAL,YAAiCgY,UAAWJ,gBAAK,kBAAM,mCAClE,cAAC,KAAD,CAAOrQ,KAAI,UAAKvH,IAAL,YAAiCgY,UAAWJ,gBAAK,kBAAM,oCAClE,cAAC,KAAD,CAAUM,KAAI,UAAKlY,KAAoBiO,GAAE,UAAKjO,IAAL,kBCFlCyY,GAXW,WACzB,OACC,qBAAK/Z,UAAU,iBAAf,SACC,cAAC,KAAD,UACC,cAAC,KAAD,CAAO6I,KAAK,GAAGyQ,UAAWU,U,oBCEfC,GAPA,CACbC,KAAMC,KACNxY,OAAQ,QACRyY,SAAS,eACJC,K,oBCGQC,GAPA,CACbJ,KAAMK,KACN5Y,OAAQ,KACRyY,SAAS,eACJI,K,oBCGQC,GAPA,CACbP,KAAMQ,KACN/Y,OAAQ,QACRyY,SAAS,eACJO,K,oBCKQC,GAPG,CACdC,GAAIC,GACJC,GAAIC,GACJC,GAAIC,GACJC,GCNW,CACbjB,KAAMkB,KACNzZ,OAAQ,QACRyY,SAAS,eACJiB,M,mBCiCQjD,gBAAWzI,aANF,SAAC,GAAqB,IAAnBnM,EAAkB,EAAlBA,MAAOb,EAAW,EAAXA,KAGhC,MAAO,CAAEhB,OAFW6B,EAAZ7B,OAESe,MADCC,EAAVD,SAIgBiN,EA9BL,SAAC7P,GAAW,IACvB6B,EAAqB7B,EAArB6B,OAAQ3C,EAAac,EAAbd,SACVsc,EAAmBV,GAAUjZ,GACnC,OACE,cAAC,KAAD,CACEA,OAAQ2Z,EAAiB3Z,OACzByY,SAAUkB,EAAiBlB,SAF7B,SAGE,cAAC,KAAD,CAAgBzY,OAAQ2Z,EAAiBpB,KAAzC,SACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAOqB,OAAK,EAAC1S,KAAK,IAAlB,SACE,cAAC,KAAD,CAAU0G,GAAIlO,QAEhB,cAAC,KAAD,CAAOwH,KAAMvH,IAAb,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAOuH,KAAMxH,IAAb,SACE,cAAC,GAAD,CAAWrC,SAAUA,iBCjB3BqV,GAAS,CACbmH,KAAK,GAAD,OAAKC,GAAL,uBACJC,MAAM,GAAD,OAAKD,GAAL,yBAmBQE,OAhBf,WACE,OACE,qBAAK3b,UAAU,MAAf,SACE,cAAC,IAAD,CAAU2H,MAAOA,GAAjB,SACE,cAAC,yBAAD,CAAuBiU,SAAUvH,GAAQwH,aAActa,IAAaU,aAAc6Z,eAAe,yBAAjG,SACE,cAAC,KAAD,UACE,cAAC,KAAD,UACE,cAAC,KAAD,CAAOjT,KAAK,IAAIyQ,UAAWyC,gBCTrBC,QACW,cAA7Bjd,OAAOC,SAASid,UAEe,UAA7Bld,OAAOC,SAASid,UAEhBld,OAAOC,SAASid,SAAS1S,MACvB,2D,OCZN2S,IAAS3C,OAAO,cAAC,GAAD,IAAS4C,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhX,MAAK,SAAAiX,GACjCA,EAAaC,iB,0DEjIbC,EAAiB,CAEvBA,QAAyB,SAAUC,GACjC,OAAOC,YAAM,CACXnE,IAAK,WACLoE,OAAQ,MACRF,YAIJD,QAAyB,SAAUld,GACjC,OAAOod,YAAM,CACXnE,IAAK,SACLoE,OAAQ,OACRrd,KAAMA,KAIVkd,UAA2B,SAAUld,GACpC,OAAOod,YAAM,CACZnE,IAAK,SACLoE,OAAQ,OACRhe,QAAS,CACL,iBAAkB,QAEtBW,KAAMA,MAIOkd,IClBAI,UARD,SAAChd,GACb4c,EAAeK,UAAUhI,KAAKC,UAAU,CACtClM,MAAO,MACPkU,KAAM,MACNC,OAAQ,KACN1X,MAAK,SAAA2X,GAAI,OAAIC,QAAQC,IAAI,OAAQF,Q,gCCVvC,4RAuBapW,EAAgB,SAACpE,GAC5B,MAAO,CACLI,KAAMvC,IACNmC,UAUSuE,EAAiB,WAC5B,MAAO,CACLnE,KAAMrC,MAWGyG,EAAgB,SAACxE,GAC5B,MAAO,CACLI,KAAMnC,IACN+B,UAUSyE,EAAgC,SAACzE,GAC5C,MAAO,CACLI,KAAM9B,IACN0B,UAUS0E,EAAkC,SAAC1E,GAC9C,MAAO,CACLI,KAAM5B,IACNwB,UAISiE,EAAkB,SAACvH,GAC9B,MAAO,CACL0D,KAAMlC,IACNxB,YAISie,EAAkB,WAC7B,MAAO,CACLva,KAAMjC,MAIGyc,EAAc,WACzB,MAAO,CACLxa,KAAMhC,Q","file":"static/js/main.d09a6126.chunk.js","sourcesContent":["import * as history from 'history';\r\n\r\nexport default history.createBrowserHistory();","import axios from 'axios'\r\nimport { API_BASE_URL } from 'configs/AppConfig'\r\nimport history from '../history'\r\nimport { AUTH_TOKEN } from 'redux/constants/Auth'\r\nimport { notification } from 'antd';\r\n\r\nconst service = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000\r\n})\r\n\r\n// Config\r\nconst ENTRY_ROUTE = '/auth/login'\r\nconst TOKEN_PAYLOAD_KEY = 'authorization'\r\nconst PUBLIC_REQUEST_KEY = 'public-request'\r\n\r\n// API Request interceptor\r\nservice.interceptors.request.use(config => {\r\n\tconst jwtToken = localStorage.getItem(AUTH_TOKEN)\r\n\t\r\n  if (jwtToken) {\r\n    config.headers[TOKEN_PAYLOAD_KEY] = jwtToken\r\n  }\r\n\r\n  if (!jwtToken && !config.headers[PUBLIC_REQUEST_KEY]) {\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n  }\r\n\r\n  return config\r\n}, error => {\r\n\t// Do something with request error here\r\n\tnotification.error({\r\n\t\tmessage: 'Error'\r\n\t})\r\n  Promise.reject(error)\r\n})\r\n\r\n// API respone interceptor\r\nservice.interceptors.response.use( (response) => {\r\n\treturn response.data\r\n}, (error) => {\r\n\r\n\tlet notificationParam = {\r\n\t\tmessage: ''\r\n\t}\r\n\t\r\n\t// Remove token and redirect \r\n\tif (error.response.status === 400 || error.response.status === 403) {\r\n\t\tnotificationParam.message = 'Authentication Fail'\r\n\t\tnotificationParam.description = 'Please login again'\r\n\t\tlocalStorage.removeItem(AUTH_TOKEN)\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\tif (error.response.status === 404) {\r\n\t\tnotificationParam.message = 'Not Found'\r\n\t}\r\n\r\n\tif (error.response.status === 500) {\r\n\t\tnotificationParam.message = 'Internal Server Error'\r\n\t}\r\n\t\r\n\tif (error.response.status === 508) {\r\n\t\tnotificationParam.message = 'Time Out'\r\n\t}\r\n\r\n\tnotification.error(notificationParam)\r\n\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nexport default service","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","export const SIGNIN = 'SIGNIN'; \r\nexport const AUTHENTICATED = 'AUTHENTICATED';\r\nexport const SIGNOUT = 'SIGNOUT';\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED = 'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED = 'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'","import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig'\r\n\r\nexport const APP_NAME = 'Emilus';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n\r\nexport const THEME_CONFIG = {\r\n\tnavCollapsed: false,\r\n\tsideNavTheme: SIDE_NAV_LIGHT,\r\n\tlocale: 'en',\r\n\tnavType: NAV_TYPE_SIDE,\r\n\ttopNavColor: '#3e82f7',\r\n\theaderNavColor: '',\r\n\tmobileNav: false,\r\n\tcurrentTheme: 'light'\r\n};\r\n","const dev = {\r\n  API_ENDPOINT_URL: 'http://localhost:3003/api'\r\n};\r\n\r\nconst prod = {\r\n  API_ENDPOINT_URL: 'https://api.prod.com'\r\n};\r\n\r\nconst test = {\r\n  API_ENDPOINT_URL: 'https://api.test.com'\r\n};\r\n\r\nconst getEnv = () => {\r\n\tswitch (process.env.NODE_ENV) {\r\n\t\tcase 'development':\r\n\t\t\treturn dev\r\n\t\tcase 'production':\r\n\t\t\treturn prod\r\n\t\tcase 'test':\r\n\t\t\treturn test\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport const env = getEnv()\r\n","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\n","import {\r\n\tAUTH_TOKEN,\r\n\tAUTHENTICATED,\r\n\tSHOW_AUTH_MESSAGE,\r\n\tHIDE_AUTH_MESSAGE,\r\n\tSIGNOUT_SUCCESS,\r\n\tSIGNUP_SUCCESS,\r\n\tSHOW_LOADING,\r\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: localStorage.getItem(AUTH_TOKEN),\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase SHOW_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\tshowMessage: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase HIDE_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\tshowMessage: false,\r\n\t\t\t}\r\n\t\tcase SIGNOUT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t  ...state,\r\n\t\t\t  loading: false,\r\n\t\t\t  token: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SHOW_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import { combineReducers } from 'redux';\r\nimport Auth from './Auth';\r\nimport Theme from './Theme';\r\n\r\nconst reducers = combineReducers({\r\n    theme: Theme,\r\n    auth: Auth\r\n});\r\n\r\nexport default reducers;","const FirebaseConfig = {\r\n  apiKey: 'AIzaSyAOWoRQGoegkmwnCca7B2GG5GUG_ZP1lcM',\r\n  authDomain: 'emilus.firebaseapp.com',\r\n  databaseURL: 'https://emilus.firebaseio.com',\r\n  projectId: 'emilus',\r\n  storageBucket: 'emilus.appspot.com',\r\n  messagingSenderId: '807555350717',\r\n  appId: '1:807555350717:web:145ba7c21af47203a2f7d4',\r\n  measurementId: 'G-8KE7HJB252'\r\n};\r\n\r\nexport default FirebaseConfig\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport firebaseConfig from 'configs/FirebaseConfig';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// firebase utils\r\nconst db = firebase.firestore()\r\nconst auth = firebase.auth();\r\nconst currentUser = auth.currentUser\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\nconst twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\r\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\r\n\r\nexport {\r\n\tdb,\r\n\tauth,\r\n\tcurrentUser,\r\n\tgoogleAuthProvider,\r\n\tfacebookAuthProvider,\r\n\ttwitterAuthProvider,\r\n\tgithubAuthProvider\r\n};","import { auth, googleAuthProvider, facebookAuthProvider } from 'auth/FirebaseAuth';\r\n\r\nconst FirebaseService = {}\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n\tawait auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n  await auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\t\t\r\nFirebaseService.signOutRequest = async () =>\r\n\tawait auth.signOut().then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInGoogleRequest = async () =>\r\n  await auth.signInWithPopup(googleAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInFacebookRequest = async () =>\r\n  await auth.signInWithPopup(facebookAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signUpEmailRequest = async (email, password) =>\r\n\tawait auth.createUserWithEmailAndPassword(email, password).then(user => user).catch(err => err);\t\r\n\t\r\nexport default FirebaseService","import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\r\nimport {\r\n\tAUTH_TOKEN,\r\n\tSIGNIN,\r\n\tSIGNOUT,\r\n\tSIGNUP,\r\n\tSIGNIN_WITH_GOOGLE,\r\n\tSIGNIN_WITH_FACEBOOK\r\n} from '../constants/Auth';\r\nimport {\r\n\tshowAuthMessage,\r\n\tauthenticated,\r\n\tsignOutSuccess,\r\n\tsignUpSuccess,\r\n\tsignInWithGoogleAuthenticated,\r\n\tsignInWithFacebookAuthenticated\r\n} from \"../actions/Auth\";\r\n\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\nexport function* signInWithFBEmail() {\r\n  yield takeEvery(SIGNIN, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(authenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signOut() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n\t\ttry {\r\n\t\t\tconst signOutUser = yield call(FirebaseService.signOutRequest);\r\n\t\t\tif (signOutUser === undefined) {\r\n\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\r\n\t\t\t\tyield put(signOutSuccess(signOutUser));\r\n\t\t\t} else {\r\n\t\t\t\tyield put(showAuthMessage(signOutUser.message));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n  yield takeEvery(SIGNUP, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signUpEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signUpSuccess(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t}\r\n\t);\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n\t\tfork(signInWithFBEmail),\r\n\t\tfork(signOut),\r\n\t\tfork(signUpWithFBEmail),\r\n\t\tfork(signInWithFBGoogle),\r\n\t\tfork(signInWithFacebook)\r\n  ]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport Auth from './Auth';\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    Auth(),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nfunction configureStore(preloadedState) {\r\n \r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(reducers, preloadedState, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n  ));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"../reducers/index\", () => {\r\n      const nextRootReducer = require(\"../reducers/index\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import { \r\n  DashboardOutlined\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nconst dashBoardNavTree = [{\r\n  key: 'home',\r\n  path: `${APP_PREFIX_PATH}/home`,\r\n  title: 'home',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  submenu: []\r\n},{\r\n  key: 'function',\r\n  path: `${APP_PREFIX_PATH}/function`,\r\n  title: 'function',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  submenu: []\r\n},{\r\n  key: 'test1',\r\n  path: `${APP_PREFIX_PATH}/test1`,\r\n  title: 'test1',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  submenu: []\r\n},{\r\n  key: 'test2',\r\n  path: `${APP_PREFIX_PATH}/test2`,\r\n  title: 'test2',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  submenu: []\r\n}\r\n]\r\n\r\nconst navigationConfig = [\r\n  ...dashBoardNavTree\r\n]\r\n\r\nexport default navigationConfig;\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  return navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t  if( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tonMobileNavToggle(false)\r\n\t\t}\r\n\t}\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor, localization = true}) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { connect } from \"react-redux\";\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  if(isMobile && !props.mobileLogo) {\r\n    return 0\r\n  }\r\n  if(isNavTop) {\r\n    return 'auto'\r\n  }\r\n  if(navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`\r\n  }\r\n}\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if(logoType === 'light') {\r\n    if(navCollapsed) {\r\n      return '/img/logo-sm-white.png'\r\n    }\r\n    return '/img/logo-white.png'\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return '/img/logo-sm.png'\r\n  }\r\n  return '/img/logo.png'\r\n}\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if(isMobile && !mobileLogo) {\r\n    return 'd-none'\r\n  } else {\r\n    return 'logo'\r\n  }\r\n}\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)} \r\n      style={{width: `${getLogoWidthGutter(props, isMobile)}`}}>\r\n      <img src={getLogo(props)} alt={`${APP_NAME} logo`}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } =  theme;\r\n  return { navCollapsed, navType }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPicker = props => {\r\n\r\n\tconst { colorChange, color='' } = props\r\n\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [pickerColor, setPickerColor] = useState(color)\r\n\tconst [boxColor, setBoxColor] = useState(color)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoxColor(color);\r\n\t\tsetPickerColor(color)\r\n\t}, [color]);\r\n\r\n\tconst onPickerDropdown = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconst {rgb} = value\r\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tsetBoxColor(rgba)\r\n\t\tsetPickerColor(rgb)\r\n\t\tcolorChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"color-picker\">\r\n\t\t\t<div className=\"color-picker-dropdown\">\r\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\r\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string,\r\n\tcolorChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined  } from '@ant-design/icons';\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport lang from \"assets/data/language.data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { onLocaleChange } from 'redux/actions/Theme'\r\n\r\nfunction getLanguageDetail (locale) {\r\n\tconst data = lang.filter(elm => (elm.langId === locale))\r\n\treturn data[0]\r\n}\r\n\r\nconst SelectedLanguage = ({ locale }) => {\r\n\tconst language = getLanguageDetail(locale)\r\n\tconst {langName, icon} = language\r\n\treturn (\r\n\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${icon}.png`} alt={langName}/>\r\n\t\t\t<span className=\"font-weight-semibold ml-2\">{langName} <DownOutlined className=\"font-size-xs\"/></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const NavLanguage = ({ locale, configDisplay, onLocaleChange }) => {\r\n\tconst languageOption = (\r\n\t\t<Menu>\r\n\t\t\t{\r\n\t\t\t\tlang.map((elm, i) => {return (\r\n\t\t\t\t\t<Menu.Item \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tclassName={locale === elm.langId? 'ant-dropdown-menu-item-active': ''} \r\n\t\t\t\t\t\tonClick={() => onLocaleChange(elm.langId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${elm.icon}.png`} alt={elm.langName}/>\r\n\t\t\t\t\t\t\t\t<span className=\"font-weight-normal ml-2\">{elm.langName}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{locale === elm.langId? <CheckOutlined className=\"text-success\" /> : null}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t)})\r\n\t\t\t}\r\n\t\t</Menu>\r\n\t)\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" overlay={languageOption} trigger={[\"click\"]}>\r\n\t\t\t{\r\n\t\t\t\tconfigDisplay ?\r\n\t\t\t\t(\r\n\t\t\t\t\t<a href=\"#/\" className=\"text-gray\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t<SelectedLanguage locale={locale}/>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\t(\r\n\t\t\t\t\t<Menu mode=\"horizontal\">\r\n\t\t\t\t\t\t<Menu.Item>\r\n\t\t\t\t\t\t\t<a href=\"#/\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t\t\t<GlobalOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps, {onLocaleChange})(NavLanguage);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Radio, Switch, Button, message } from 'antd';\r\nimport { \r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n} from 'redux/actions/Theme';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport NavLanguage from './NavLanguage';\r\nimport { \r\n\tSIDE_NAV_LIGHT,\r\n\tNAV_TYPE_SIDE,\r\n\tNAV_TYPE_TOP,\r\n\tSIDE_NAV_DARK\r\n} from 'constants/ThemeConstant';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport utils from 'utils/index';\r\n\r\nconst colorOptions = [\r\n\t'#3e82f7',\r\n\t'#24a772',\r\n\t'#de4436',\r\n\t'#924aca',\r\n\t'#193550'\r\n]\r\n\r\nconst ListOption = ({name, selector, disabled, vertical}) => (\r\n\t<div className={`my-4 ${vertical? '' : 'd-flex align-items-center justify-content-between'}`}>\r\n\t\t<div className={`${disabled ? 'opacity-0-3' : ''} ${vertical? 'mb-3' : ''}`}>{name}</div>\r\n\t\t<div>{selector}</div>\r\n\t</div>\r\n)\r\n\r\nexport const ThemeConfigurator = ({ \r\n\tnavType, \r\n\tsideNavTheme, \r\n\tnavCollapsed,\r\n\ttopNavColor,\r\n\theaderNavColor,\r\n\tlocale,\r\n\tcurrentTheme,\r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange, \r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}) => {\r\n\tconst isNavTop = navType === NAV_TYPE_TOP? true : false\r\n\tconst isCollapse = navCollapsed \r\n\r\n\tconst { switcher, themes } = useThemeSwitcher();\r\n\r\n\tconst toggleTheme = (isChecked) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst changedTheme = isChecked ? 'dark' : 'light'\r\n\t\tonSwitchTheme(changedTheme)\r\n    switcher({ theme: themes[changedTheme] });\r\n  };\r\n\r\n\tconst ontopNavColorClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonTopNavColorChange(hex)\r\n\t}\r\n\tconst onHeaderNavColorClick = (value) => {\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonHeaderNavColorChange(hex)\r\n\t}\r\n\r\n\tconst onNavTypeClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tif(value === NAV_TYPE_TOP) {\r\n\t\t\tonTopNavColorChange(colorOptions[0])\r\n\t\t\ttoggleCollapsedNav(false)\r\n\t\t}\r\n\t\tonNavTypeChange(value)\r\n\t}\r\n\r\n\tconst genCopySettingJson = (configState) => JSON.stringify(configState, null, 2);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Navigation</h4>\r\n\t\t\t\t{\r\n\t\t\t\t\tisNavTop ?\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Top Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={topNavColor} colorChange={ontopNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Header Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={headerNavColor} colorChange={onHeaderNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Navigation Type:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group \r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavTypeClick(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={navType}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_SIDE}>Side</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_TOP}>Top</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Color:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavStyleChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={sideNavTheme}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Collapse:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch \r\n\t\t\t\t\t\t\tdisabled={isNavTop} \r\n\t\t\t\t\t\t\tchecked={isCollapse} \r\n\t\t\t\t\t\t\tonChange={() => toggleCollapsedNav(!navCollapsed)} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Dark Theme:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Locale</h4>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Language:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<NavLanguage configDisplay/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<CopyToClipboard\r\n\t\t\t\t\ttext={genCopySettingJson({ navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme})}\r\n\t\t\t\t\tonCopy={() => message.success('Copy Success, please paste it to src/configs/AppConfig.js THEME_CONFIG variable.') }\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button icon={<CopyOutlined /> } block>\r\n\t\t\t\t\t\t<span>Copy Setting</span>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CopyToClipboard>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme } =  theme;\r\n  return { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\ttoggleCollapsedNav,\r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeConfigurator)\r\n","import React, { Component } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer, Menu } from 'antd';\r\nimport ThemeConfigurator from './ThemeConfigurator';\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class NavPanel extends Component {\r\n\tstate = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\t};\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n      <>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item onClick={this.showDrawer}>\r\n            <SettingOutlined className=\"nav-icon mr-0\" />\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Drawer\r\n          title=\"Theme Config\"\r\n          placement=\"right\"\r\n          width={350}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n        >\r\n          <ThemeConfigurator/>\r\n        </Drawer>\r\n      </>\r\n    );\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavPanel);","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tCloseOutlined,\r\n} from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput';\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor } = props\r\n\tconst mode = utils.getColorContrast(headerNavColor)\r\n\r\n\treturn (\r\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t<SearchInput close={close} active={active}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch  from './NavSearch';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile, currentTheme } = props;\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if(!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = ()=> {\r\n    if(!headerNavColor) {\r\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff' )\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n  const navMode = mode()\r\n  const getNavWidth = () => {\r\n    if(isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if(navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Header className={`app-header ${navMode}`} style={{backgroundColor: headerNavColor}}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode}/>\r\n        <div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">          \r\n              {\r\n                isNavTop && !isMobile ?\r\n                null\r\n                :\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onToggle()}}>\r\n                  {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <NavPanel />\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose}/>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav, currentTheme } =  theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav, currentTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps, {toggleCollapsedNav, onMobileNavToggle})(HeaderNav);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = withRouter(props => {\r\n\tconst { location } = props;\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return (\r\n      <Breadcrumb.Item key={url}>\r\n        <Link to={url}>{breadcrumbData[url]}</Link>\r\n      </Breadcrumb.Item>\r\n    );\r\n\t});\r\n  \r\n  return (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n  );\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\nimport {test1} from './test1'\r\n\r\n\r\nconst Test1Component = lazy(() => import(`./test1`))\r\nconst Test2Component = lazy(() => import(`./test2`))\r\n\r\nexport const AppViews = () => {\r\n  const jwtToken = false\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\"/>}>\r\n      <Switch>\r\n        <Route path={`${APP_PREFIX_PATH}/home`} component={lazy(() => import(`./home`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/function`} component={lazy(() => import(`./editor`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/test1`} render={() => <Test1Component token={jwtToken}/>} />  \r\n        <Route path={`${APP_PREFIX_PATH}/test2`} render={() => <Test2Component token={jwtToken}/>} />  \r\n        <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/home`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppViews);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={{paddingLeft: getLayoutGutter()}}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-1`} component={lazy(() => import(`./authentication/login-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-2`} component={lazy(() => import(`./authentication/login-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-1`} component={lazy(() => import(`./authentication/register-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-2`} component={lazy(() => import(`./authentication/register-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/forgot-password`} component={lazy(() => import(`./authentication/forgot-password`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\r\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views'\r\n\r\nexport const AuthLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import antdZhCn from 'antd/es/locale/zh_CN';\r\nimport zhMsg from \"../locales/zh_CN.json\";\r\n\r\nconst ZhLang = {\r\n  antd: antdZhCn,\r\n  locale: 'zh',\r\n  messages: {\r\n    ...zhMsg\r\n  },\r\n};\r\nexport default ZhLang;\r\n","import antdFrFR from 'antd/es/locale/fr_FR';\r\nimport frMsg from \"../locales/fr_FR.json\";\r\n\r\nconst FrLang = {\r\n  antd: antdFrFR,\r\n  locale: 'fr-FR',\r\n  messages: {\r\n    ...frMsg\r\n  },\r\n};\r\nexport default FrLang;\r\n","import enLang from './entries/en_US';\r\nimport zhLang from './entries/zh_CN';\r\nimport frLang from './entries/fr_FR';\r\nimport jaLang from './entries/ja_JP'\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    zh: zhLang,\r\n    fr: frLang,\r\n    ja: jaLang\r\n};\r\n\r\nexport default AppLocale;","import antdJaJP from 'antd/es/locale/ja_JP';\r\nimport jaMsg from \"../locales/ja_JP.json\";\r\n\r\nconst JaLang = {\r\n  antd: antdJaJP,\r\n  locale: 'ja-JP',\r\n  messages: {\r\n    ...jaMsg\r\n  },\r\n};\r\nexport default JaLang;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AppLayout from \"layouts/app-layout\";\r\nimport AuthLayout from 'layouts/auth-layout';\r\nimport AppLocale from \"lang\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { ConfigProvider } from 'antd';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const Views = (props) => {\r\n  const { locale, location } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}>\r\n      <ConfigProvider locale={currentAppLocale.antd}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={APP_PREFIX_PATH} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout />\r\n          </Route>\r\n          <Route path={APP_PREFIX_PATH}>\r\n            <AppLayout location={location}/>\r\n          </Route>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale } =  theme;\r\n  const { token } = auth;\r\n  return { locale, token }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Views from './views';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\r\nimport { THEME_CONFIG } from './configs/AppConfig';\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <ThemeSwitcherProvider themeMap={themes} defaultTheme={THEME_CONFIG.currentTheme} insertionPoint=\"styles-insertion-point\">\r\n          <Router>\r\n            <Switch>\r\n              <Route path=\"/\" component={Views}/>\r\n            </Switch>\r\n          </Router>\r\n        </ThemeSwitcherProvider>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import fetch from 'auth/FetchInterceptor'\r\n\r\nconst exampleService = {}\r\n\r\nexampleService.getPost = function (params) {\r\n  return fetch({\r\n    url: '/posts/1',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\nexampleService.setPost = function (data) {\r\n  return fetch({\r\n    url: '/posts',\r\n    method: 'post',\r\n    data: data\r\n  })\r\n}\r\n\r\nexampleService.fetchData = function (data) {\r\n\treturn fetch({\r\n\t\turl: '/login',\r\n\t\tmethod: 'post',\r\n\t\theaders: {\r\n      'public-request': 'true'\r\n    },\r\n\t\tdata: data\r\n\t})\r\n}\r\n\r\nexport default exampleService","import React from 'react'\nimport  { Redirect } from 'react-router-dom'\nimport exampleService from '../../../services/ExampleService'\n\n\nconst test1 = (props) => {\n  exampleService.fetchData(JSON.stringify({\n    title: 'foo',\n    body: 'bar',\n    userId: 1\n  })).then(resp => console.log('resp', resp))\n}\n\nexport default test1\n","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user\r\n  }\r\n};\r\n\r\nexport const authenticated = (token) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    token\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGNOUT\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n};\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE\r\n  };\r\n};\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK\r\n  };\r\n};\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message\r\n  };\r\n};\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const showLoading = () => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n  };\r\n};\r\n"],"sourceRoot":""}